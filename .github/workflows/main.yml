name: CI & CD (Vercel)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install
        run: npm ci

      # If your Vite build needs envs at build-time, write them here
      - name: 🔐 Create .env.production (for build if needed)
        run: |
          cat << 'EOF' > .env.production
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          EOF

      - name: 🧪 Test
        run: npm test -- --ci

      - name: 🏗️ Build
        run: npm run build

  deploy:
    name: Deploy to Vercel (prod)
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Vercel CLI
        run: npm i -g vercel@latest

      # Pull Vercel project settings + env vars
      - name: ⬇️ vercel pull
        run: vercel pull --yes --environment=production --token $VERCEL_TOKEN

      # Build on GitHub runners (so CI owns the build)
      - name: 🏗️ vercel build (prod)
        run: vercel build --prod --token $VERCEL_TOKEN

      # Deploy the prebuilt output to production
      - name: 🚀 vercel deploy --prebuilt (prod)
        run: vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
